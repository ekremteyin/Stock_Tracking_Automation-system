<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="StokTakipDataSet2" targetNamespace="http://tempuri.org/StokTakipDataSet2.xsd" xmlns:mstns="http://tempuri.org/StokTakipDataSet2.xsd" xmlns="http://tempuri.org/StokTakipDataSet2.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="StokTakipConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="StokTakipConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.lab3proje._1.Properties.Settings.GlobalReference.Default.StokTakipConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="CarsTableAdapter" GeneratorDataComponentClassName="CarsTableAdapter" Name="Cars" UserDataComponentName="CarsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="StokTakipConnectionString (Settings)" DbObjectName="StokTakip.dbo.Cars" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Cars] WHERE (([CarId] = @Original_CarId) AND ([Brand] = @Original_Brand) AND ([Model] = @Original_Model))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_CarId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="CarId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Brand" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Brand" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Model" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Model" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Cars] ([Brand], [Model], [Hardware]) VALUES (@Brand, @Model, @Hardware);
SELECT CarId, Brand, Model, Hardware FROM Cars WHERE (CarId = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Brand" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Brand" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Model" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Model" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Hardware" Precision="0" ProviderType="Text" Scale="0" Size="0" SourceColumn="Hardware" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT CarId, Brand, Model, Hardware FROM dbo.Cars</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Cars] SET [Brand] = @Brand, [Model] = @Model, [Hardware] = @Hardware WHERE (([CarId] = @Original_CarId) AND ([Brand] = @Original_Brand) AND ([Model] = @Original_Model));
SELECT CarId, Brand, Model, Hardware FROM Cars WHERE (CarId = @CarId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Brand" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Brand" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Model" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Model" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Hardware" Precision="0" ProviderType="Text" Scale="0" Size="0" SourceColumn="Hardware" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_CarId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="CarId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Brand" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Brand" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Model" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Model" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="CarId" ColumnName="CarId" DataSourceName="StokTakip.dbo.Cars" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@CarId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="CarId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="CarId" DataSetColumn="CarId" />
              <Mapping SourceColumn="Brand" DataSetColumn="Brand" />
              <Mapping SourceColumn="Model" DataSetColumn="Model" />
              <Mapping SourceColumn="Hardware" DataSetColumn="Hardware" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="musteriTableAdapter" GeneratorDataComponentClassName="musteriTableAdapter" Name="musteri" UserDataComponentName="musteriTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="StokTakipConnectionString (Settings)" DbObjectName="StokTakip.dbo.musteri" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[musteri] ([Ad], [Soyad], [telefon], [eposta]) VALUES (@Ad, @Soyad, @telefon, @eposta)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Ad" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="Ad" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Soyad" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="Soyad" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@telefon" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="telefon" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@eposta" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="eposta" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Ad, Soyad, telefon, eposta FROM dbo.musteri</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Ad" DataSetColumn="Ad" />
              <Mapping SourceColumn="Soyad" DataSetColumn="Soyad" />
              <Mapping SourceColumn="telefon" DataSetColumn="telefon" />
              <Mapping SourceColumn="eposta" DataSetColumn="eposta" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="PartsTableAdapter" GeneratorDataComponentClassName="PartsTableAdapter" Name="Parts" UserDataComponentName="PartsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="StokTakipConnectionString (Settings)" DbObjectName="StokTakip.dbo.Parts" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Parts] WHERE (([PartId] = @Original_PartId) AND ([PartName] = @Original_PartName) AND ([Quantity] = @Original_Quantity) AND ([CarId] = @Original_CarId))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_PartId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="PartId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_PartName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="PartName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Quantity" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Quantity" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_CarId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="CarId" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Parts] ([PartName], [Quantity], [CarId]) VALUES (@PartName, @Quantity, @CarId);
SELECT PartId, PartName, Quantity, CarId FROM Parts WHERE (PartId = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@PartName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="PartName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Quantity" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Quantity" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@CarId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="CarId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT PartId, PartName, Quantity, CarId FROM dbo.Parts</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Parts] SET [PartName] = @PartName, [Quantity] = @Quantity, [CarId] = @CarId WHERE (([PartId] = @Original_PartId) AND ([PartName] = @Original_PartName) AND ([Quantity] = @Original_Quantity) AND ([CarId] = @Original_CarId));
SELECT PartId, PartName, Quantity, CarId FROM Parts WHERE (PartId = @PartId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@PartName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="PartName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Quantity" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Quantity" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@CarId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="CarId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_PartId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="PartId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_PartName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="PartName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Quantity" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Quantity" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_CarId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="CarId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="PartId" ColumnName="PartId" DataSourceName="StokTakip.dbo.Parts" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@PartId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="PartId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="PartId" DataSetColumn="PartId" />
              <Mapping SourceColumn="PartName" DataSetColumn="PartName" />
              <Mapping SourceColumn="Quantity" DataSetColumn="Quantity" />
              <Mapping SourceColumn="CarId" DataSetColumn="CarId" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="StokTakipConnectionString (Settings)" DbObjectName="StokTakip.dbo.Parts" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="FillBy" GenerateMethods="Fill" GenerateShortCommands="true" GeneratorSourceName="FillBy" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy" UserSourceName="FillBy">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT PartId, PartName, Quantity, CarId
FROM     Parts</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="StokTakipDataSet2" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:Generator_UserDSName="StokTakipDataSet2" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="StokTakipDataSet2">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="Cars" msprop:Generator_RowClassName="CarsRow" msprop:Generator_RowEvHandlerName="CarsRowChangeEventHandler" msprop:Generator_RowDeletedName="CarsRowDeleted" msprop:Generator_RowDeletingName="CarsRowDeleting" msprop:Generator_RowEvArgName="CarsRowChangeEvent" msprop:Generator_TablePropName="Cars" msprop:Generator_RowChangedName="CarsRowChanged" msprop:Generator_UserTableName="Cars" msprop:Generator_RowChangingName="CarsRowChanging" msprop:Generator_TableClassName="CarsDataTable" msprop:Generator_TableVarName="tableCars">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="CarId" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_UserColumnName="CarId" msprop:Generator_ColumnPropNameInTable="CarIdColumn" msprop:Generator_ColumnPropNameInRow="CarId" msprop:Generator_ColumnVarNameInTable="columnCarId" type="xs:int" />
              <xs:element name="Brand" msprop:Generator_UserColumnName="Brand" msprop:Generator_ColumnPropNameInTable="BrandColumn" msprop:Generator_ColumnPropNameInRow="Brand" msprop:Generator_ColumnVarNameInTable="columnBrand">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Model" msprop:Generator_UserColumnName="Model" msprop:Generator_ColumnPropNameInTable="ModelColumn" msprop:Generator_ColumnPropNameInRow="Model" msprop:Generator_ColumnVarNameInTable="columnModel">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Hardware" msprop:Generator_UserColumnName="Hardware" msprop:Generator_ColumnPropNameInTable="HardwareColumn" msprop:Generator_ColumnPropNameInRow="Hardware" msprop:Generator_ColumnVarNameInTable="columnHardware">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="musteri" msprop:Generator_RowClassName="musteriRow" msprop:Generator_RowEvHandlerName="musteriRowChangeEventHandler" msprop:Generator_RowDeletedName="musteriRowDeleted" msprop:Generator_RowDeletingName="musteriRowDeleting" msprop:Generator_RowEvArgName="musteriRowChangeEvent" msprop:Generator_TablePropName="musteri" msprop:Generator_RowChangedName="musteriRowChanged" msprop:Generator_UserTableName="musteri" msprop:Generator_RowChangingName="musteriRowChanging" msprop:Generator_TableClassName="musteriDataTable" msprop:Generator_TableVarName="tablemusteri">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Ad" msprop:Generator_UserColumnName="Ad" msprop:Generator_ColumnPropNameInTable="AdColumn" msprop:Generator_ColumnPropNameInRow="Ad" msprop:Generator_ColumnVarNameInTable="columnAd" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="20" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Soyad" msprop:Generator_UserColumnName="Soyad" msprop:Generator_ColumnPropNameInTable="SoyadColumn" msprop:Generator_ColumnPropNameInRow="Soyad" msprop:Generator_ColumnVarNameInTable="columnSoyad" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="30" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="telefon" msprop:Generator_UserColumnName="telefon" msprop:Generator_ColumnPropNameInTable="telefonColumn" msprop:Generator_ColumnPropNameInRow="telefon" msprop:Generator_ColumnVarNameInTable="columntelefon" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="30" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="eposta" msprop:Generator_UserColumnName="eposta" msprop:Generator_ColumnPropNameInTable="epostaColumn" msprop:Generator_ColumnPropNameInRow="eposta" msprop:Generator_ColumnVarNameInTable="columneposta" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="30" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Parts" msprop:Generator_RowClassName="PartsRow" msprop:Generator_RowEvHandlerName="PartsRowChangeEventHandler" msprop:Generator_RowDeletedName="PartsRowDeleted" msprop:Generator_RowDeletingName="PartsRowDeleting" msprop:Generator_RowEvArgName="PartsRowChangeEvent" msprop:Generator_TablePropName="Parts" msprop:Generator_RowChangedName="PartsRowChanged" msprop:Generator_UserTableName="Parts" msprop:Generator_RowChangingName="PartsRowChanging" msprop:Generator_TableClassName="PartsDataTable" msprop:Generator_TableVarName="tableParts">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="PartId" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_UserColumnName="PartId" msprop:Generator_ColumnPropNameInTable="PartIdColumn" msprop:Generator_ColumnPropNameInRow="PartId" msprop:Generator_ColumnVarNameInTable="columnPartId" type="xs:int" />
              <xs:element name="PartName" msprop:Generator_UserColumnName="PartName" msprop:Generator_ColumnPropNameInTable="PartNameColumn" msprop:Generator_ColumnPropNameInRow="PartName" msprop:Generator_ColumnVarNameInTable="columnPartName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Quantity" msprop:Generator_UserColumnName="Quantity" msprop:Generator_ColumnPropNameInTable="QuantityColumn" msprop:Generator_ColumnPropNameInRow="Quantity" msprop:Generator_ColumnVarNameInTable="columnQuantity" type="xs:int" />
              <xs:element name="CarId" msprop:Generator_UserColumnName="CarId" msprop:Generator_ColumnPropNameInTable="CarIdColumn" msprop:Generator_ColumnPropNameInRow="CarId" msprop:Generator_ColumnVarNameInTable="columnCarId" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Cars" />
      <xs:field xpath="mstns:CarId" />
    </xs:unique>
    <xs:unique name="Parts_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Parts" />
      <xs:field xpath="mstns:PartId" />
    </xs:unique>
  </xs:element>
  <xs:annotation>
    <xs:appinfo>
      <msdata:Relationship name="FK_Parts_Cars" msdata:parent="Cars" msdata:child="Parts" msdata:parentkey="CarId" msdata:childkey="CarId" msprop:Generator_UserParentTable="Cars" msprop:Generator_UserChildTable="Parts" msprop:Generator_RelationVarName="relationFK_Parts_Cars" msprop:Generator_ChildPropName="GetPartsRows" msprop:Generator_UserRelationName="FK_Parts_Cars" msprop:Generator_ParentPropName="CarsRow" />
    </xs:appinfo>
  </xs:annotation>
</xs:schema>